#################################
########  Folder 0  ############
Namespace(batchsize=32, beta1=0.5, dataroot='../../../dataset', dataset='ecg', device='gpu', folder=0, gpu_ids='1', isize=320, istest=False, lr=0.0001, model='beatgan', n_aug=0, name='beatgan/ecg', nc=1, ndf=64, ngf=64, ngpu=1, niter=100, nz=50, outf='./output', print_freq=100, threshold=0.05, w_adv=1, workers=1)
train data size:(62436, 1, 320)
val data size:(8025, 1, 320)
test N data size:(17343, 1, 320)
test S data size:(2723, 1, 320)
test V data size:(6307, 1, 320)
test F data size:(721, 1, 320)
test Q data size:(13, 1, 320)
load data success!!!
Traceback (most recent call last):
  File "main.py", line 43, in <module>
    model=MyModel(opt,dataloader,device)
  File "/data/haenim/lab/signal_ndf64/experiments/ecg/model.py", line 68, in __init__
    self.G = Generator(opt).to(device)
  File "/data/haenim/anaconda3/envs/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 852, in to
    return self._apply(convert)
  File "/data/haenim/anaconda3/envs/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 530, in _apply
    module._apply(fn)
  File "/data/haenim/anaconda3/envs/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 530, in _apply
    module._apply(fn)
  File "/data/haenim/anaconda3/envs/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 530, in _apply
    module._apply(fn)
  File "/data/haenim/anaconda3/envs/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 552, in _apply
    param_applied = fn(param)
  File "/data/haenim/anaconda3/envs/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 850, in convert
    return t.to(device, dtype if t.is_floating_point() or t.is_complex() else None, non_blocking)
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
